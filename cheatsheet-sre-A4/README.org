* CheatSheet: SRE/DevOps/Sysadmin                                 :Interview:
:PROPERTIES:
:type:     interview
:export_file_name: cheatsheet-sre-A4.pdf
:END:

#+BEGIN_HTML
<a href="https://github.com/dennyzhang/cheatsheet.dennyzhang.com/tree/master/cheatsheet-sre-A4"><img align="right" width="200" height="183" src="https://www.dennyzhang.com/wp-content/uploads/denny/watermark/github.png" /></a>
<div id="the whole thing" style="overflow: hidden;">
<div style="float: left; padding: 5px"> <a href="https://www.linkedin.com/in/dennyzhang001"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/linkedin.png" alt="linkedin" /></a></div>
<div style="float: left; padding: 5px"><a href="https://github.com/dennyzhang"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/github.png" alt="github" /></a></div>
<div style="float: left; padding: 5px"><a href="https://www.dennyzhang.com/slack" target="_blank" rel="nofollow"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/slack.png" alt="slack"/></a></div>
</div>

<br/><br/>
<a href="http://makeapullrequest.com" target="_blank" rel="nofollow"><img src="https://img.shields.io/badge/PRs-welcome-brightgreen.svg" alt="PRs Welcome"/></a>
#+END_HTML

- PDF Link: [[https://github.com/dennyzhang/cheatsheet.dennyzhang.com/blob/master/cheatsheet-sre-A4/cheatsheet-sre-A4.pdf][cheatsheet-sre-A4.pdf]], Category: [[https://cheatsheet.dennyzhang.com/category/interview/][interview]]
- Blog URL: https://cheatsheet.dennyzhang.com/cheatsheet-sre-A4
- Related posts: [[https://cheatsheet.dennyzhang.com/cheatsheet-leetcode-A4][CheatSheet: Leetcode For Code Interview]], [[https://cheatsheet.dennyzhang.com/cheatsheet-paper-A4][CheatSheet: Well-Known Papers For IT Industry]], [[https://github.com/topics/denny-cheatsheets][#denny-cheatsheets]]

File me [[https://github.com/dennyzhang/cheatsheet.dennyzhang.com/issues][Issues]] or star [[https://github.com/dennyzhang/cheatsheet.dennyzhang.com][this repo]].
** Reference
| Name       | Summary                                                                                |
|------------+----------------------------------------------------------------------------------------|
| Cheatsheet | [[https://cheatsheet.dennyzhang.com/cheatsheet-leetcode-A4][CheatSheet: Leetcode For Code Interview]], [[https://cheatsheet.dennyzhang.com/cheatsheet-followup-A4][CheatSheet: Common Code Problems & Follow-ups]] |
| Cheatsheet | [[https://cheatsheet.dennyzhang.com/cheatsheet-systemdesign-A4][CheatSheet: System Design For Job Interview]], [[https://cheatsheet.dennyzhang.com/cheatsheet-sre-A4][CheatSheet: SRE/DevOps/Sysadmin]]           |
| Cheatsheet | [[https://cheatsheet.dennyzhang.com/cheatsheet-behavior-A4][CheatSheet: Behavior Questions For Coder Interview]], [[https://cheatsheet.dennyzhang.com/cheatsheet-shell-A4][Shell CheatSheet]]                   |
** Good Mindsets
| Num | Name                            | Summary                                  |
|-----+---------------------------------+------------------------------------------|
|   1 | First thing: =Stop The Bleed=   |                                          |
|   2 | [[http://cloudscaling.com/blog/cloud-computing/the-history-of-pets-vs-cattle/][Pets VS Cattles]]                 |                                          |
|   3 | Fix a process VS Fix a problem  |                                          |
|   4 | Evaluate Business Impact First  |                                          |
|   5 | Prevention VS Treatment         |                                          |
|   6 | [[https://landing.google.com/sre/sre-book/chapters/postmortem-culture/][Postmortem Culture]]              |                                          |
|   7 | Understand Workflow & Use Cases | Super important for trouble shooting     |
|   8 | Automation VS Convention        |                                          |
|   9 | [[https://en.wikipedia.org/wiki/Principle_of_least_privilege][Principle Of Least Privilege]]    |                                          |
|  10 | Design Tools VS Use Tools       | Operational knowledge is not good enough |
#+TBLFM: $1=@-1$1+1;N
** Top 25 Linux Basic Questions
| Num | Name                                                           | Summary                                    |
|-----+----------------------------------------------------------------+--------------------------------------------|
|   1 | Thead VS Process                                               | [[https://github.com/dennyzhang/cheatsheet.dennyzhang.com/blob/master/cheatsheet-sre-A4/LINUX_BASIC.org#process-vs-thread][Github Link]]                                |
|   2 | Explain virtual memory                                         | [[https://github.com/dennyzhang/cheatsheet.dennyzhang.com/blob/master/cheatsheet-sre-A4/LINUX_BASIC.org#explain-virtual-memory][Github Link]]                                |
|   3 | Explain paging and paging fault                                | [[https://github.com/dennyzhang/cheatsheet.dennyzhang.com/blob/master/cheatsheet-sre-A4/LINUX_BASIC.org#explain-paging-and-paging-fault][Github Link]]                                |
|   4 | Explain the output of =vmstat= command                         | [[https://github.com/dennyzhang/cheatsheet.dennyzhang.com/blob/master/cheatsheet-sre-A4/LINUX_BASIC.org#explain-the-output-of-vmstat-command][Github Link]]                                |
|   5 | Explain inode                                                  | [[https://github.com/dennyzhang/cheatsheet.dennyzhang.com/blob/master/cheatsheet-sre-A4/LINUX_BASIC.org#explain-inode][Github Link]]                                |
|   6 | epoll VS poll VS select                                        | [[https://github.com/dennyzhang/cheatsheet.dennyzhang.com/blob/master/cheatsheet-sre-A4/LINUX_BASIC.org#epoll-vs-poll-vs-select][Github Link]]                                |
|   7 | Explain how OS schedules processes                             | [[https://github.com/dennyzhang/cheatsheet.dennyzhang.com/blob/master/cheatsheet-sre-A4/LINUX_BASIC.org#explain-how-os-schedules-processes][Github Link]]                                |
|   8 | Explain spinlock                                               | [[https://github.com/dennyzhang/cheatsheet.dennyzhang.com/blob/master/cheatsheet-sre-A4/LINUX_BASIC.org#explain-spinlock][Github Link]]                                |
|   9 | Explain the general file system hierarchy of a Linux system    | [[https://github.com/dennyzhang/cheatsheet.dennyzhang.com/blob/master/cheatsheet-sre-A4/LINUX_BASIC.org#explain-the-general-file-system-hierarchy-of-a-linux-system][Github Link]]                                |
|  10 | Explain What RAID is? And how to choose RAID level?            |                                            |
|-----+----------------------------------------------------------------+--------------------------------------------|
|  11 | Explain the output of =top= command                            |                                            |
|  12 | Explain the output of =sar= command                            |                                            |
|  13 | What is /proc directory?                                       |                                            |
|  14 | Forget root password. How to reset it?                         |                                            |
|  15 | How to solve ssh "Connection refused" errors?                  |                                            |
|  16 | How to daemonize a process?                                    |                                            |
|  17 | [[https://askubuntu.com/questions/35722/what-is-kernel-panic][What are common scenarios of linux kernel panics?]]              |                                            |
|  18 | What are coredump and kdump?                                   |                                            |
|  19 | Program startup process in userspace                           | [[https://0xax.gitbooks.io/linux-insides/Misc/linux-misc-4.html][Link: Program startup process in userspace]] |
|  20 | What's your favorite shell and why?                            | [[https://sunlightmedia.org/bash-vs-zsh/][Link: Bash vs Zsh]]                          |
|  21 | [[https://linoxide.com/linux-how-to/difference-between-utmp-wtmp-files-in-linux/][Figure out who has logged to server now and previously?]]        | w, last, lastb; lastlog; /var/run/*tmp     |
|  22 | What is init program?                                          |                                            |
|  23 | How does sudo work? Given =sudo=, why people may need =su=?    |                                            |
|  24 | How linux signal trap works? And what signals can't be ignored |                                            |
|  25 | How to close stdin/stdout/stderr of one command                | =some_command </dev/null >/dev/null 2>&1=  |
#+TBLFM: $1=@-1$1+1;N
** Top 15 Linux Workflow
| Num | Name                                                      | Summary                                               |
|-----+-----------------------------------------------------------+-------------------------------------------------------|
|   1 | What happens, when opening https://www.google.com         | [[https://github.com/dennyzhang/cheatsheet.dennyzhang.com/blob/master/cheatsheet-sre-A4/LINUX_WORKFLOW.org#what-happens-when-opening-httpswwwgooglecom][Github Link]]                                           |
|   2 | What happens, when "ls -l *"                              | [[https://github.com/dennyzhang/cheatsheet.dennyzhang.com/blob/master/cheatsheet-sre-A4/LINUX_WORKFLOW.org#what-happens-when-ls--l-][Github Link]]. shell, expansion, fork                   |
|   3 | What happens, when "Ctrl + c" in a terminal               | [[https://github.com/dennyzhang/cheatsheet.dennyzhang.com/blob/master/cheatsheet-sre-A4/LINUX_WORKFLOW.org#what-happens-when-ctrl--c-in-a-terminal][Github Link]]. i/o interrupt, SIGINT, sig handler       |
|   4 | What happens, when "touch a.txt"                          | [[https://github.com/dennyzhang/cheatsheet.dennyzhang.com/blob/master/cheatsheet-sre-A4/LINUX_WORKFLOW.org#what-happens-when-touch-atxt][Github Link]]                                           |
|   5 | What happens, when you press power on button in a server? | [[https://github.com/dennyzhang/cheatsheet.dennyzhang.com/blob/master/cheatsheet-sre-A4/LINUX_WORKFLOW.org#what-happens-when-you-press-power-on-button-in-a-server][Github Link]]. bios, mbr, grub, init, runlevel          |
|   6 | What happens, when "cat /etc/hosts"                       | [[https://github.com/dennyzhang/cheatsheet.dennyzhang.com/blob/master/cheatsheet-sre-A4/LINUX_WORKFLOW.org#what-happens-when-cat-etchosts][Github Link]]                                           |
|   7 | Explain init.d workflow                                   | [[https://github.com/dennyzhang/cheatsheet.dennyzhang.com/blob/master/cheatsheet-sre-A4/LINUX_WORKFLOW.org#explain-initd-workflow][Github Link]]                                           |
|   8 | Explain how to build a linux release                      | [[https://github.com/dennyzhang/cheatsheet.dennyzhang.com/blob/master/cheatsheet-sre-A4/LINUX_WORKFLOW.org#explain-how-to-build-a-linux-release][Github Link]]                                           |
|   9 | Explain how kernel schedules process                      | [[https://github.com/dennyzhang/cheatsheet.dennyzhang.com/blob/master/cheatsheet-sre-A4/LINUX_WORKFLOW.org#explain-how-kernel-schedules-process][Github Link]]                                           |
|  10 | Explain how kernel read data from disk                    | [[https://github.com/dennyzhang/cheatsheet.dennyzhang.com/blob/master/cheatsheet-sre-A4/LINUX_WORKFLOW.org#explain-how-kernel-read-data-from-disk][Github Link]]                                           |
|  11 | Explain how I/O interrupt works                           | [[https://github.com/dennyzhang/cheatsheet.dennyzhang.com/blob/master/cheatsheet-sre-A4/LINUX_WORKFLOW.org##explain-how-io-interrupt-works][Github Link]]. Top half, bottom half, interrupt handler |
|  12 | Explain how system call works                             | [[https://github.com/dennyzhang/cheatsheet.dennyzhang.com/blob/master/cheatsheet-sre-A4/LINUX_WORKFLOW.org#explain-how-system-call-works][Github Link]]                                           |
|  13 | [[https://jvns.ca/blog/2016/01/23/sendfile-a-new-to-me-system-call/][Linux sendfile with zero-copy]]                             |                                                       |
#+TBLFM: $1=@-1$1+1;N
** Top 20 Linux Advanced Questions
| Num | Name                                                                 | Summary                                                             |
|-----+----------------------------------------------------------------------+---------------------------------------------------------------------|
|   1 | Explain Linux security model                                         | nothing-or-all model, capability, extended attributes, selinux, etc |
|   2 | Whether it's possible to sniff HTTPS traffic? And why?               |                                                                     |
|   3 | Figure out what critical commands ssh users have issued?             |                                                                     |
|   4 | [[https://unix.stackexchange.com/questions/62697/why-is-i-o-uninterruptible][Why is I/O uninterruptible?]]                                          |                                                                     |
|   5 | Explain shell features                                               | shell pipes, filename wildcards, env var expansion, alias, etc      |
|   6 | What is the difference between UNIX and Linux                        |                                                                     |
|   7 | What is Virtual Memory?                                              |                                                                     |
|   8 | What is localhost and why would ping localhost fail?                 |                                                                     |
|   9 | How does the Linux kernel handle a system call                       | [[https://0xax.gitbooks.io/linux-insides/SysCall/linux-syscall-2.html][Link: System calls in the Linux kernel]]                              |
|  10 | Difference between ext3 and ext4                                     |                                                                     |
|  11 | [[https://www.tecmint.com/systemd-replaces-init-in-linux/][How do you feel about systemd?]]                                       | Init processes start serially, long booting time                    |
|  12 | ssh port forwarding VS ssh reverse port forwarding                   |                                                                     |
|  13 | How to quickly crash an linux machine?                               |                                                                     |
|  14 | How to deprovision a user completely?                                |                                                                     |
|  15 | [[https://www.thegeekstuff.com/2008/08/15-examples-to-master-linux-command-line-history/][How reliable =history= command is? And how to alleviate the problem?]] | =~/.bash_history=, =$HISTTIMEFORMAT= env                            |
|  16 | how to generate a zombie process                                     |                                                                     |
|  17 | With =bg= in one terminal, =jobs= doesn't show in another terminal   |                                                                     |
|  18 | How to setup http proxy with SLA for different traffic?              |                                                                     |
|  19 | What's your wishlist for linux?                                      |                                                                     |
|  20 | What's your ideal monitoring system in your imagination?             |                                                                     |
#+TBLFM: $1=@-1$1+1;N

** Top 20 SRE Questions
| Num | Name                                                                | Summary                                   |
|-----+---------------------------------------------------------------------+-------------------------------------------|
|   2 | How to do a online rolling upgrade for a given system?              | Single node, or multiple node?            |
|   3 | How you migrate legacy on-prem app to cloud-native in public cloud? |                                           |
#+TBLFM: $1=@-1$1+1;N

** Top 20 Container Questions
| Num | Name                                                            | Summary |
|-----+-----------------------------------------------------------------+---------|
|   1 | Compare to Linux process, what things containers can't support? |         |
|   2 | How to sniff container's traffic?                               |         |
|   3 | Explain the workflow of "docker stop $container_id"             |         |
#+TBLFM: $1=@-1$1+1;N

** Top 10 Networking Questions
| Num | Name                                                               | Summary                  |
|-----+--------------------------------------------------------------------+--------------------------|
|   1 | Difference between switch and router?                              | L2, L3                   |
|   2 | What is a DNS amplification attack?                                |                          |
|   3 | Difference between L2 and L3 switch?                               |                          |
|   4 | What is TCP SYN scan? How it's conducted?                          |                          |
|   5 | Which port ICMP is using?                                          | Neither TCP or UDP. [[https://learningnetwork.cisco.com/thread/120555][Link]] |
|   6 | Proxy server vs Loadbalancer. Proxy server vs Reverse proxy server |                          |
|   7 | Brief introduction about 802.1x                                    |                          |
|   8 | List =all methods= which can stop one ip ssh to the server         |                          |
|   9 | Explain how iptable routing rules works                            |                          |
#+TBLFM: $1=@-1$1+1;N

** SRE/System Engineering
| Num | Name      | Summary                                                                         |
|-----+-----------+---------------------------------------------------------------------------------|
|   1 | Reference | [[https://github.com/chassing/linux-sysadmin-interview-questions][Github: chassing/linux-sysadmin-interview-questions]], [[https://github.com/0xAX/linux-insides][Github: 0xAX/linux-insides]] |
|   2 | Reference | [[https://shivamkhandelwal.in/production-engineering-internship-interview-process-facebook/][Link: Facebook Production Engineering Internship Interview]]                      |
|   3 | Reference | [[https://syedali.net/engineer-interview-questions/][Link: SRE INTERVIEW QUESTIONS]]                                                   |
#+TBLFM: $1=@-1$1+1;N
** More Resources
License: Code is licensed under [[https://www.dennyzhang.com/wp-content/mit_license.txt][MIT License]].

https://syedali.net/engineer-interview-questions/

#+BEGIN_HTML
<a href="https://cheatsheet.dennyzhang.com"><img align="right" width="201" height="268" src="https://raw.githubusercontent.com/USDevOps/mywechat-slack-group/master/images/denny_201706.png"></a>

<a href="https://cheatsheet.dennyzhang.com"><img align="right" src="https://raw.githubusercontent.com/dennyzhang/cheatsheet.dennyzhang.com/master/images/cheatsheet_dns.png"></a>
#+END_HTML
* org-mode configuration                                           :noexport:
#+STARTUP: overview customtime noalign logdone showall
#+DESCRIPTION:
#+KEYWORDS:
#+LATEX_HEADER: \usepackage[margin=0.6in]{geometry}
#+LaTeX_CLASS_OPTIONS: [8pt]
#+LATEX_HEADER: \usepackage[english]{babel}
#+LATEX_HEADER: \usepackage{lastpage}
#+LATEX_HEADER: \usepackage{fancyhdr}
#+LATEX_HEADER: \pagestyle{fancy}
#+LATEX_HEADER: \fancyhf{}
#+LATEX_HEADER: \rhead{Updated: \today}
#+LATEX_HEADER: \rfoot{\thepage\ of \pageref{LastPage}}
#+LATEX_HEADER: \lfoot{\href{https://github.com/dennyzhang/cheatsheet.dennyzhang.com/tree/master/cheatsheet-sre-A4}{GitHub: https://github.com/dennyzhang/cheatsheet.dennyzhang.com/tree/master/cheatsheet-sre-A4}}
#+LATEX_HEADER: \lhead{\href{https://cheatsheet.dennyzhang.com/cheatsheet-sre-A4}{Blog URL: https://cheatsheet.dennyzhang.com/cheatsheet-sre-A4}}
#+AUTHOR: Denny Zhang
#+EMAIL:  denny@dennyzhang.com
#+TAGS: noexport(n)
#+PRIORITIES: A D C
#+OPTIONS:   H:3 num:t toc:nil \n:nil @:t ::t |:t ^:t -:t f:t *:t <:t
#+OPTIONS:   TeX:t LaTeX:nil skip:nil d:nil todo:t pri:nil tags:not-in-toc
#+EXPORT_EXCLUDE_TAGS: exclude noexport
#+SEQ_TODO: TODO HALF ASSIGN | DONE BYPASS DELEGATE CANCELED DEFERRED
#+LINK_UP:
#+LINK_HOME:
* TODO zsh: as a shell interpret, how difference zsh vs bash?      :noexport:
* #  --8<-------------------------- separator ------------------------>8-- :noexport:
* DONE ICMP has no ports and is neither TCP nor UDP.               :noexport:
  CLOSED: [2020-02-01 Sat 00:34]
https://learningnetwork.cisco.com/thread/120555

What exactly is the firewall rule? ICMP has no ports and is neither TCP nor UDP. ICMP is IP protocol 1 (see RFC792), TCP is IP protocol 6 (described in RFC793) and UDP is IP protocol 17(see RFC768). UDP and TCP have ports, ICMP has no ports, but types and codes. I would say: don't filter ICMP until you know exactly what you are doing. Do you remember the issues when DSL was introduced and some servers were not reachable anymore via DSL connection but were reachable via the proxy-server of the ISP? The reason for that effect was wrong ICMP filtering on the "server site" firewall: thoses firewalls have filtered out ICMP "fragmentation needed" packets, and the servers were configured to do PMTUD (which is best common pratice since many years). PMTUD (Path MTU Discovery) relies on receiving ICMP "fragmentation needed" packets, if the MTU for the complete way between source and destination has a lower MTU than the MTU between source and next hop. The server sends his data with "don't fragment bit" set and reduces the MTU for sent packets to that specific destination, if it receives "fragmentation needed" ICMP packets from some device "on the way". If there is a device on the way, that throws away that ICMP "fragmentation needed" packets, the server resends the dropped packets, that are too large to reach the destination without fragmentation, again and again with the same high MTU, and they will be dropped again and again ...

If you really want to filter ICMP. do never filter ICMP unreachables. I would prefer to never filter ICMP at all (but you may ratelimit ICMP). ICMP filtering will (in my opinion) not lead to much more security, but it will make it much harder to find misconfigurations and reasons for network issues. In my opinion the disadvantages of filtering ICMP are much more than the advantages doing so ...
* #  --8<-------------------------- separator ------------------------>8-- :noexport:
* TODO software/systems engineers                                  :noexport:
https://shivamkhandelwal.in/production-engineering-internship-interview-process-facebook/

Production Engineers at Facebook are hybrid software/systems engineers who ensure that Facebook's services run smoothly and have the capacity for future growth.

You might be confused and thinking of it as a regular Site Reliability Engineer (SRE) role, but it's much more than it. 


- Production Engineers
- SRE
- Software engineers
- Systems engineers

code, fundamentals of networks, UNIX, deployment and preferably other infrastructure services 
     like load balancing, caching, CDNs etc. 

If you read RFCs like you eat food, that is a plus. 😋
* TODO Difference between soft/hard links?                         :noexport:
* TODO Which system calls can list all files in current directory? :noexport:
* #  --8<-------------------------- separator ------------------------>8-- :noexport:
* TODO Sticky Bit? Which files have that set?                      :noexport:
* TODO How a URL resolve?                                          :noexport:
* TODO You are not able to serve files present in /var/www/htmlvia httpdprocess. :noexport:
https://shivamkhandelwal.in/production-engineering-internship-interview-process-facebook/

This round is the best thing about the whole process. You are typically not expected to write any code in this round. BUT are given an open-ended problem to solve. You need to talk aloud your strategy, debugging ideas, solutions and so on.

One random example will be: You are not able to serve files present in /var/www/htmlvia httpdprocess. What mistakes can you think of? How will you solve them?

You can think starting from file permissions, checking httpd config, iptables rules, and so on. There is no right answer but surely better answers when different candidates are compared.
* TODO write fairly sophisticated code involving pipes, threading, etc. :noexport:
https://shivamkhandelwal.in/production-engineering-internship-interview-process-facebook/
* TODO What xargs is?                                              :noexport:
* TODO Time related system calls in the Linux kernel               :noexport:
https://0xax.gitbooks.io/linux-insides/Timers/linux-timers-7.html
* TODO setup a linux quiz                                          :noexport:
* TODO Describe ways of process inter-communication                :noexport:
* TODO Important RFCs                                              :noexport:
| Num | Name                                                     | Summary |
|-----+----------------------------------------------------------+---------|
|   1 | [[https://www.rfc-editor.org/rfc/rfc1912.txt][RFC 1912]]-Common DNS operational and configuration errors |         |
#+TBLFM: $1=@-1$1+1;N
* #  --8<-------------------------- separator ------------------------>8-- :noexport:
* TODO What happens, when opening https://www.google.com           :noexport:
* TODO What happens, when pressing "Ctrl + c"                      :noexport:
* TODO How to setup http proxy with SLA for different traffic?     :noexport:
* TODO Difference between L2 and L3 switch?                        :noexport:
* #  --8<-------------------------- separator ------------------------>8-- :noexport:
* TODO What is /proc directory?                                    :noexport:
* TODO Compare to Linux process, what things containers can't support? :noexport:
* TODO Explain Linux Boot Process                                  :noexport:
* TODO How does the Linux kernel handle a system call              :noexport:
* #  --8<-------------------------- separator ------------------------>8-- :noexport:
* TODO Brief introduction about 802.1x                             :noexport:
* TODO What is TCP SYN scan? How it's conducted?                   :noexport:
* TODO What's your wishlist for linux?                             :noexport:
* TODO Explain how iptable routing rules works                     :noexport:
* TODO Why kube-proxy change from iptables to ipvs                 :noexport:
https://www.projectcalico.org/comparing-kube-proxy-modes-iptables-or-ipvs/
* TODO ip access control                                           :noexport:
I have a dynamic IP. I want to prevent people from accessing my server (assume over all ports and things). Except me. I want to access the server. Tell me how that works if it works at all. How does your answer change if I say that my LAN IP is sonehow set to static? How does it change when I say that I somehow have a public IP?
* TODO What is tty in ssh?                                         :noexport:
* TODO Forget root password. How to reset it?                      :noexport:
* TODO how does sudo work?                                         :noexport:
* TODO What is localhost and why would ping localhost fail?        :noexport:
* TODO How linux signal trap works?                                :noexport:
* TODO sniff https traffic                                         :noexport:
* #  --8<-------------------------- separator ------------------------>8-- :noexport:
* TODO Does free memory exist on Linux?                            :noexport:
* HALF How to search for the string "my konfu is the best" in files of a directory recursively? :noexport:
* TODO I get "command not found" when I run ifconfig -a. What can be wrong? :noexport:
* HALF What commands do you know that can be used to check DNS records? :noexport:
* TODO How to add a new system user without login permissions?     :noexport:
* TODO How do you set the mail address of the root/a user?         :noexport:
* TODO What does CTRL-d do?                                        :noexport:
* TODO What is the difference between UNIX and Linux.              :noexport:
* TODO What is the difference between Telnet and SSH?              :noexport:
* TODO linux tool: tee, cut, tac, sar, netstat                     :noexport:
* TODO linux tool: less vs more                                    :noexport:
* #  --8<-------------------------- separator ------------------------>8-- :noexport:
* TODO What is a packet filter and how does it work?               :noexport:
* TODO What is an A record, an NS record, a PTR record, a CNAME record, an MX record? :noexport:
* TODO Are there any other RRs and what are they used for?         :noexport:
* TODO What is the difference between hardlinks and symlinks? What happens when you remove the source to a symlink/hardlink? :noexport:
* TODO How to force/trigger a file system check on next reboot?    :noexport:
* TODO What is SNMP and what is it used for?                       :noexport:
* TODO What is a runlevel and how to get the current runlevel?     :noexport:
* TODO What is SSH port forwarding?                                :noexport:
* TODO ssh port forwarding vs ssh reverse port forwarding          :noexport:
* TODO What is the difference between local and remote port forwarding? :noexport:
* #  --8<-------------------------- separator ------------------------>8-- :noexport:
* TODO What are the steps to add a user to a system without using useradd/adduser? :noexport:
* TODO [#A] What is MAJOR and MINOR numbers of special files?      :noexport:
* TODO [#A] Describe the mknod command and when you'd use it.      :noexport:
* TODO Describe a scenario when you get a "filesystem is full" error, but 'df' shows there is free space. :noexport:
* TODO Describe a scenario when deleting a file, but 'df' not showing the space being freed. :noexport:
* TODO Explain briefly each one of the process states.             :noexport:
* TODO how to generate a zombie process                            :noexport:
* TODO Describe briefly the steps you need to take in order to create and install a valid certificate for the site https://foo.example.com. :noexport:
* #  --8<-------------------------- separator ------------------------>8-- :noexport:
* TODO [#A] Which Linux file types do you know?                    :noexport:
https://opensource.com/life/16/10/introduction-linux-filesystems
* TODO What is the difference between exec and fork?               :noexport:
* TODO How many NTP servers would you configure in your local ntp.conf? :noexport:
* TODO How can you get Host, Channel, ID, LUN of SCSI disk?        :noexport:
* TODO What is bash quick substitution/caret replace(^x^y)?        :noexport:
* TODO [#A] What is a tarpipe (or, how would you go about copying everything, including hardlinks and special files, from one server to another)? :noexport:
* TODO How can you tell if the httpd package was already installed? :noexport:
* TODO How can you list the contents of a package?                 :noexport:
* TODO Can you explain to me the difference between block based, and object based storage? :noexport:
* TODO Why SIGTSTP signal is designed to be unable to be trapped?  :noexport:
https://www.systutorials.com/5510/catching-the-signal-sent-by-kill-in-c-on-linux/
https://major.io/2009/06/15/two-great-signals-sigstop-and-sigcont/
* TODO What is the Linux Standard Base?                            :noexport:
* TODO Did you ever create RPM's, DEB's or solaris pkg's?          :noexport:
* TODO Describe the linux boot process with as much detail as possible, starting from when the system is powered on and ending when you get a prompt. :noexport:
* #  --8<-------------------------- separator ------------------------>8-- :noexport:
* TODO [#A] What's a chroot jail?                                  :noexport:
* TODO When trying to umount a directory it says it's busy, how to find out which PID holds the directory? :noexport:
* TODO [#A] What's LD_PRELOAD and when it's used?                  :noexport:
* TODO What are cgroups? Can you specify a scenario where you could use them? :noexport:
* TODO A running process gets EAGAIN: Resource temporarily unavailable on reading a socket. How can you close this bad socket/file descriptor without killing the process? :noexport:
* TODO [#A] How do you change TCP stack buffers? How do you calculate it? :noexport:
* TODO What is Huge Tables? Why isn't it enabled by default? Why and when use it? :noexport:
* TODO What is LUKS? How to use it?                                :noexport:
* #  --8<-------------------------- separator ------------------------>8-- :noexport:
* TODO [#A] What is the difference between a process and a thread? And parent and child processes after a fork system call? :noexport:
* TODO [#A] What is localhost and why would ping localhost fail?   :noexport:
* #  --8<-------------------------- separator ------------------------>8-- :noexport:
* TODO What is a Linux kernel module?                              :noexport:
* TODO [#A] What is the sticky bit?                                :noexport:
* TODO [#A] What does the immutable bit do to a file?              :noexport:
* #  --8<-------------------------- separator ------------------------>8-- :noexport:
* TODO How to start a process to keep holding one fd in linux

* TODO HTTP proxy and reverse http proxy                           :noexport:
* TODO Describe the general file system hierachy of a linux system :noexport:
* HALF zombie process VS orphan proces                             :noexport:
- zombie: process has died, but entry in process table hasn't been cleaned up
- orphan: parent has died, child still running. Orphans are adopted by init process
** Why kill signal doesn't work for zombie process?
https://en.wikipedia.org/wiki/Zombie_process
* #  --8<-------------------------- separator ------------------------>8-- :noexport:
* TODO How to daemonize a process                                  :noexport:
* TODO What happens, when opening https://www.google.com           :noexport:
* HALF What happens, when running "ls -l *"                        :noexport:
- Shell get user input from device
- Check for expansion and alias
- Check built-in
- Check PATH
- Fork and execute program in the child process
  fork(): clone parent process
  execve(): run command of ls
- Upon completion, the child process will terminate and control will be returned to the parent process.
* #  --8<-------------------------- separator ------------------------>8-- :noexport:
* TODO Describe the relationship between Kernel and Shell          :noexport:
* TODO TCP vs Socket                                               :noexport:
* #  --8<-------------------------- separator ------------------------>8-- :noexport:
* TODO regexp: Count number of character matches in a string (Regex only)? :noexport:
https://stackoverflow.com/questions/37448266/count-number-of-character-matches-in-a-string-regex-only
* TODO TCP传输过程对packet的处理                                   :noexport:
https://www.1point3acres.com/bbs/forum.php?mod=viewthread&tid=306208&highlight=SRE
* TODO TCP对duplicate ACK的处理                                    :noexport:
https://www.1point3acres.com/bbs/forum.php?mod=viewthread&tid=306208&highlight=SRE
* TODO linux能handle最多多少个process                              :noexport:
https://www.1point3acres.com/bbs/forum.php?mod=viewthread&tid=306208&highlight=SRE
* TODO linux file locking                                          :noexport:
https://gavv.github.io/articles/file-locks/
https://www.alibabacloud.com/help/doc-detail/45213.htm
https://nullprogram.com/blog/2016/08/03/
** What If Two Processes Write to the Same File Simultaneously
https://walkerlala.github.io/archive/what-if-write-to-the-same-file.html

- FD table per process
- FD table system-wise
- Inode table system-wise

* #  --8<-------------------------- separator ------------------------>8-- :noexport:
* TODO what happen when you power on linux system, system call,paging之类的 :noexport:
* TODO Network serving model: select, poll vs epoll                :noexport:
* #  --8<-------------------------- separator ------------------------>8-- :noexport:
* TODO What's memory barrier                                       :noexport:
memory barrier: synchronize memory access between multiple threads.
* TODO [#A] What is a DNS amplification attack?                    :noexport:
Why is DNS amplification a valid attack as opposed to ... say HTTP amplifcation attack? I.e. What is so special about DNS that allow this attack to be carried out?
* #  --8<-------------------------- separator ------------------------>8-- :noexport:
* TODO [#A] What is init program?                                  :noexport:
* TODO [#A] Synchronization primitives in the Linux kernel.        :noexport:
https://0xax.gitbooks.io/linux-insides/SyncPrim/

* TODO [#A] Understand Kernel                                      :noexport:
* TODO [#A] fork() vs execve()                                     :noexport:
* #  --8<-------------------------- separator ------------------------>8-- :noexport:
* TODO [#A] Walk me through the steps in booting into single user mode to troubleshoot a problem. :noexport:
* TODO Why deleting files will release inode?                      :noexport:
* #  --8<-------------------------- separator ------------------------>8-- :noexport:
* TODO [#A] Describe briefly how HTTPS works                       :noexport:
* TODO [#A] How to choose RAID levels for different scenarios?     :noexport:
| Name    | Summary                          |
|---------+----------------------------------|
| Raid 0  | disk striping                    |
| Raid 1  | disk mirroring                   |
| Raid 2  |                                  |
| Raid 3  |                                  |
| Raid 4  |                                  |
| Raid 5  |                                  |
| Raid 6  |                                  |
| Raid 10 | combination of RAID 1 and RAID 0 |
* #  --8<-------------------------- separator ------------------------>8-- :noexport:
* TODO If I have no swap memory, would page fault still be triggered :noexport:
* #  --8<-------------------------- separator ------------------------>8-- :noexport:
* TODO [#A] Explain how kernel read data from disk                 :noexport:
* TODO [#A] init1                                                  :noexport:
- All linux processes are created by init1 process
* TODO memory: buffer vs cached                                    :noexport:
